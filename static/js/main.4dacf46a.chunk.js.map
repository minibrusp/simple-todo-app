{"version":3,"sources":["components/Header.js","components/InputTodo.js","components/TodoItem.js","components/TodosList.js","components/TodoContainer.js","index.js","components/TodoItem.module.css"],"names":["Header","style","padding","lineHeight","fontSize","fontWeight","marginBottom","color","textTransform","textAlign","InputTodo","props","useState","title","inputText","setInputText","onSubmit","event","preventDefault","trim","addTodoProps","alert","className","type","placeholder","value","onChange","target","name","TodoItem","editing","setEditing","todo","id","completed","viewMode","editMode","display","useEffect","console","log","styles","item","onDoubleClick","checkbox","checked","handleChangeCheckboxProps","onClick","delTodoProps","fontStyle","opacity","textDecoration","textInput","editTodoProps","onKeyDown","key","TodosList","todos","map","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","editedTitle","ReactDOM","render","StrictMode","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.4dacf46a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n\r\n   const headerStyle = {\r\n      padding: \"20px 0\",\r\n      lineHeight: \"1.5em\",\r\n   }\r\n\r\n   return (\r\n      <header style={headerStyle}>\r\n         <h1 style={{\r\n            fontSize: '6rem',\r\n            fontWeight: '600',\r\n            marginBottom: '2rem',\r\n            lineHeight: '1em',\r\n            color: '#ececec',\r\n            textTransform: 'lowercase',\r\n            textAlign: 'center',\r\n         }}>\r\n            My Simple To do App\r\n         </h1>\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default Header","import React, { useState } from 'react'\r\nimport { FaPlusCircle } from 'react-icons/fa'\r\n\r\nconst InputTodo = props => {\r\n\r\n   const [inputText, setInputText] = useState({\r\n      title: '',\r\n   })\r\n\r\n   const changeHandlerInputText = event => {\r\n      setInputText({\r\n         ...inputText,\r\n         [event.target.name]: event.target.value\r\n      })\r\n   }\r\n\r\n   const handleOnSubmit = event => {\r\n      event.preventDefault()\r\n      if(inputText.title.trim()) {\r\n         props.addTodoProps(inputText.title)\r\n         setInputText({\r\n            title: '',\r\n         })\r\n      } else {\r\n         alert('Please write an item . . . ')\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={handleOnSubmit} className='form-container'>\r\n         <input \r\n            type=\"text\"\r\n            placeholder=\"Add todo...\"\r\n            className='input-text'\r\n            value={inputText.title}\r\n            onChange={changeHandlerInputText}\r\n            name='title'\r\n         />\r\n         <button className='input-submit'>\r\n            <FaPlusCircle />\r\n         </button>\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default InputTodo","import React, { useState, useEffect } from 'react'\r\nimport styles from './TodoItem.module.css'\r\nimport { FaTrash } from 'react-icons/fa'\r\n\r\nconst TodoItem = props => {\r\n\r\n   const [editing, setEditing] = useState(false)\r\n\r\n   const {title, id, completed} = props.todo\r\n\r\n   const completedStyle = {\r\n      fontStyle: \"italic\",\r\n      color: \"#595959\",\r\n      opacity: 0.4,\r\n      textDecoration: \"line-through\",\r\n   }\r\n\r\n   const handleDoubleClick = () => {\r\n      setEditing(true)\r\n   }\r\n\r\n   const handleEditDone = event => {\r\n      if(event.key === 'Enter') {\r\n         setEditing(false)\r\n      }\r\n   }\r\n\r\n   const viewMode = {}\r\n   const editMode = {}\r\n\r\n   if(editing) {\r\n      viewMode.display = 'none'\r\n   } else {\r\n      editMode.display = 'none'\r\n   }\r\n\r\n   useEffect(() => {\r\n      return () => {\r\n         console.log('Cleaning Up....')\r\n      }\r\n   }, [])\r\n\r\n   return(\r\n      <li className={styles.item}>\r\n         <div style={viewMode} onDoubleClick={handleDoubleClick}>\r\n            <input \r\n               type=\"checkbox\" \r\n               className={styles.checkbox}\r\n               checked={completed} \r\n               onChange={() => props.handleChangeCheckboxProps(id)}\r\n            />\r\n            <button onClick={() => props.delTodoProps(id)}>\r\n               <FaTrash />\r\n            </button>\r\n            <span style={ completed ? completedStyle : null }>\r\n               {title}\r\n            </span>\r\n         </div>\r\n         <input \r\n            type=\"text\"\r\n            className={styles.textInput}\r\n            style={editMode}\r\n            value={title}\r\n            onChange={event => props.editTodoProps(event.target.value, id)}\r\n            onKeyDown={handleEditDone} \r\n         />\r\n      </li>\r\n   )\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst TodosList = props => {\r\n   return(\r\n      <div>\r\n         {props.todos.map(todo => (\r\n            <TodoItem \r\n               key={todo.id} \r\n               todo={todo}\r\n               handleChangeCheckboxProps={props.handleChangeCheckboxProps}\r\n               delTodoProps={props.delTodoProps}\r\n               editTodoProps={props.editTodoProps} \r\n            />\r\n         ))}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default TodosList","import React, { useState, useEffect } from 'react'\r\nimport Header from './Header'\r\nimport InputTodo from './InputTodo'\r\nimport TodosList from './TodosList'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nconst TodoContainer = () => {\r\n\r\n   const [todos, setTodos] = useState(getInitialTodos())\r\n\r\n   const handleChangeCheckbox = id => {\r\n      setTodos(prevState => \r\n         prevState.map(todo => {\r\n            if(todo.id === id) {\r\n               return {\r\n                  ...todo,\r\n                  completed: !todo.completed,\r\n               }\r\n            }\r\n            return todo\r\n         })\r\n      )\r\n   }\r\n\r\n   const delTodo = id => {\r\n      setTodos([\r\n         ...todos.filter(todo => {\r\n            return todo.id !== id\r\n         })\r\n      ])\r\n   }\r\n\r\n   const addTodo = title => {\r\n      let newTodo = {\r\n         id: uuidv4(),\r\n         title: title,\r\n         completed: false,\r\n      }\r\n      setTodos([...todos, newTodo])\r\n   }\r\n\r\n   const editTodo = (editedTitle, id) => {\r\n      setTodos(\r\n         todos.map(todo => {\r\n            if(todo.id === id) {\r\n               todo.title = editedTitle\r\n            }\r\n            return todo\r\n         })\r\n      )\r\n   }\r\n\r\n   function getInitialTodos() {\r\n      const temp = localStorage.getItem('todos')\r\n      const savedTodos = JSON.parse(temp)\r\n      return savedTodos || []\r\n   }\r\n\r\n   useEffect(() => {\r\n      const temp = JSON.stringify(todos)\r\n      localStorage.setItem('todos', temp)\r\n   }, [todos])\r\n\r\n   return(\r\n      <div className=\"container\">\r\n         <div className=\"inner\">\r\n            <Header />\r\n            <InputTodo \r\n               addTodoProps={addTodo}\r\n            />\r\n            <TodosList \r\n               todos={todos}\r\n               handleChangeCheckboxProps={handleChangeCheckbox}\r\n               delTodoProps={delTodo}\r\n               editTodoProps={editTodo}\r\n            />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default TodoContainer ","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport TodoContainer from './components/TodoContainer'\r\n\r\nimport './App.css'\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n      <TodoContainer />\r\n   </React.StrictMode>,\r\n   document.querySelector('#root')\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__Cfx2f\",\"checkbox\":\"TodoItem_checkbox__3Ty__\",\"textInput\":\"TodoItem_textInput__3l3eB\"};"],"sourceRoot":""}